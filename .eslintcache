[{"D:\\Aviroop-ADG\\ADG-recruitment-portal-admin\\src\\index.js":"1","D:\\Aviroop-ADG\\ADG-recruitment-portal-admin\\src\\App.js":"2","D:\\Aviroop-ADG\\ADG-recruitment-portal-admin\\src\\containers\\Login\\Login.js":"3","D:\\Aviroop-ADG\\ADG-recruitment-portal-admin\\src\\containers\\Admin\\Admin.jsx":"4","D:\\Aviroop-ADG\\ADG-recruitment-portal-admin\\src\\hoc\\Background\\Background.js":"5","D:\\Aviroop-ADG\\ADG-recruitment-portal-admin\\src\\containers\\Logout\\Logout.js":"6","D:\\Aviroop-ADG\\ADG-recruitment-portal-admin\\src\\components\\AdminQuestions\\Questions\\TechnicalQuestions.jsx":"7","D:\\Aviroop-ADG\\ADG-recruitment-portal-admin\\src\\components\\AdminQuestions\\Questions\\DesignQuestions.jsx":"8","D:\\Aviroop-ADG\\ADG-recruitment-portal-admin\\src\\components\\AdminQuestions\\Questions\\MgmtQuestions.jsx":"9","D:\\Aviroop-ADG\\ADG-recruitment-portal-admin\\src\\components\\AdminQuestions\\Modal\\Modal.jsx":"10","D:\\Admin-portal\\ADG-Recruitment-Admin\\src\\index.js":"11","D:\\Admin-portal\\ADG-Recruitment-Admin\\src\\App.js":"12","D:\\Admin-portal\\ADG-Recruitment-Admin\\src\\containers\\Login\\Login.js":"13","D:\\Admin-portal\\ADG-Recruitment-Admin\\src\\containers\\Admin\\Admin.jsx":"14","D:\\Admin-portal\\ADG-Recruitment-Admin\\src\\hoc\\Background\\Background.js":"15","D:\\Admin-portal\\ADG-Recruitment-Admin\\src\\containers\\Logout\\Logout.js":"16","D:\\Admin-portal\\ADG-Recruitment-Admin\\src\\components\\AdminQuestions\\Questions\\MgmtQuestions.jsx":"17","D:\\Admin-portal\\ADG-Recruitment-Admin\\src\\components\\AdminQuestions\\Questions\\DesignQuestions.jsx":"18","D:\\Admin-portal\\ADG-Recruitment-Admin\\src\\components\\AdminQuestions\\Questions\\TechnicalQuestions.jsx":"19","D:\\Admin-portal\\ADG-Recruitment-Admin\\src\\components\\AdminQuestions\\Modal\\Modal.jsx":"20","D:\\Admin-portal\\ADG-Recruitment-Admin\\src\\components\\Leaderboard\\Leaderboard.jsx":"21","D:\\Admin-portal\\ADG-Recruitment-Admin\\src\\components\\Leaderboard\\Display.jsx":"22","D:\\Admin-portal\\ADG-Recruitment-Admin\\src\\components\\UserCard\\UserCard.jsx":"23","D:\\Admin-portal\\ADG-Recruitment-Admin\\src\\components\\Leaderboard\\Detail.jsx":"24"},{"size":234,"mtime":1607942359031,"results":"25","hashOfConfig":"26"},{"size":475,"mtime":1607942359009,"results":"27","hashOfConfig":"26"},{"size":3082,"mtime":1608046940469,"results":"28","hashOfConfig":"26"},{"size":2087,"mtime":1607942359025,"results":"29","hashOfConfig":"26"},{"size":462,"mtime":1607942359030,"results":"30","hashOfConfig":"26"},{"size":513,"mtime":1607942359028,"results":"31","hashOfConfig":"26"},{"size":9841,"mtime":1608055956488,"results":"32","hashOfConfig":"26"},{"size":9402,"mtime":1608056096787,"results":"33","hashOfConfig":"26"},{"size":6032,"mtime":1608056230724,"results":"34","hashOfConfig":"26"},{"size":3279,"mtime":1608042439042,"results":"35","hashOfConfig":"26"},{"size":234,"mtime":1608699962434,"results":"36","hashOfConfig":"37"},{"size":611,"mtime":1608700018745,"results":"38","hashOfConfig":"37"},{"size":3120,"mtime":1608699776070,"results":"39","hashOfConfig":"37"},{"size":2285,"mtime":1608699713970,"results":"40","hashOfConfig":"37"},{"size":462,"mtime":1608223324770,"results":"41","hashOfConfig":"37"},{"size":513,"mtime":1608223324770,"results":"42","hashOfConfig":"37"},{"size":6152,"mtime":1608699570760,"results":"43","hashOfConfig":"37"},{"size":9402,"mtime":1608223324770,"results":"44","hashOfConfig":"37"},{"size":9841,"mtime":1608699649766,"results":"45","hashOfConfig":"37"},{"size":3305,"mtime":1608699536596,"results":"46","hashOfConfig":"37"},{"size":10872,"mtime":1608811675886,"results":"47","hashOfConfig":"37"},{"size":3193,"mtime":1608890342054,"results":"48","hashOfConfig":"37"},{"size":10879,"mtime":1608893259229,"results":"49","hashOfConfig":"37"},{"size":5549,"mtime":1608892679940,"results":"50","hashOfConfig":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"16parqs",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"yxsa86",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Aviroop-ADG\\ADG-recruitment-portal-admin\\src\\index.js",[],["105","106"],"D:\\Aviroop-ADG\\ADG-recruitment-portal-admin\\src\\App.js",[],"D:\\Aviroop-ADG\\ADG-recruitment-portal-admin\\src\\containers\\Login\\Login.js",[],"D:\\Aviroop-ADG\\ADG-recruitment-portal-admin\\src\\containers\\Admin\\Admin.jsx",[],"D:\\Aviroop-ADG\\ADG-recruitment-portal-admin\\src\\hoc\\Background\\Background.js",[],"D:\\Aviroop-ADG\\ADG-recruitment-portal-admin\\src\\containers\\Logout\\Logout.js",[],"D:\\Aviroop-ADG\\ADG-recruitment-portal-admin\\src\\components\\AdminQuestions\\Questions\\TechnicalQuestions.jsx",["107","108","109"],"D:\\Aviroop-ADG\\ADG-recruitment-portal-admin\\src\\components\\AdminQuestions\\Questions\\DesignQuestions.jsx",[],"D:\\Aviroop-ADG\\ADG-recruitment-portal-admin\\src\\components\\AdminQuestions\\Questions\\MgmtQuestions.jsx",[],"D:\\Aviroop-ADG\\ADG-recruitment-portal-admin\\src\\components\\AdminQuestions\\Modal\\Modal.jsx",[],"D:\\Admin-portal\\ADG-Recruitment-Admin\\src\\index.js",[],["110","111"],"D:\\Admin-portal\\ADG-Recruitment-Admin\\src\\App.js",[],"D:\\Admin-portal\\ADG-Recruitment-Admin\\src\\containers\\Login\\Login.js",[],"D:\\Admin-portal\\ADG-Recruitment-Admin\\src\\containers\\Admin\\Admin.jsx",[],"D:\\Admin-portal\\ADG-Recruitment-Admin\\src\\hoc\\Background\\Background.js",[],"D:\\Admin-portal\\ADG-Recruitment-Admin\\src\\containers\\Logout\\Logout.js",[],"D:\\Admin-portal\\ADG-Recruitment-Admin\\src\\components\\AdminQuestions\\Questions\\MgmtQuestions.jsx",["112","113","114","115","116","117","118","119","120","121","122","123"],"import React,{ useState } from \"react\";\r\nimport {v4 as uuid } from \"uuid\";\r\nimport Modal from '../Modal/Modal';\r\nimport classes from \"./Questions.module.css\";\r\n\r\nconst MgmtQuestions = (props)=>{\r\n    const [questionDescription,setQuestionDescription]=useState(\"\");\r\n    let inputValue = (event)=>{ setQuestionDescription(event.target.value) }\r\n\r\n    const [yearofstudy,setYearofstudy]=useState(1);\r\n    let yearValue = (event) =>{ setYearofstudy(event.target.value) }\r\n\r\n    const [files, setFiles] = useState({});\r\n        let getFile = (file)=>{ setFiles(file) }\r\n\r\n    const [mgmtQuestions,setMgmtQuestions]=useState([\r\n        // {\r\n        //     id:uuid(),\r\n        //     questionDescription:\"hello bro\", \r\n        //     yearofstudy:1,\r\n        //     file:\"\"       \r\n        // }\r\n    ]);\r\n    async function addMgmtQuestion(){\r\n        setMgmtQuestions(prevQ=>{\r\n            return [...prevQ,{id:uuid(),questionDescription:questionDescription,yearofstudy:yearofstudy,file:files.base64}]\r\n        });\r\n\r\n        const questionObject = {description:questionDescription, questionImage:files.base64};\r\n\r\n        await fetch(\"https://adgrecruitments.herokuapp.com/admin/management/add-question\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmMyNmI1NTNiNzgwMTE4N2IyZWE4ZTgiLCJpYXQiOjE2MDY3NjAwMTl9.DB2DxgaWierOYKZ4EJX44R9NXrEE5JwT0c2PaHSJAk4\",\r\n            },\r\n            body: JSON.stringify(questionObject)\r\n        })\r\n        .then(function(response) {\r\n            // console.log(questionObject);\r\n            // console.log(response);\r\n            return response.json();\r\n        }).then(function(data) {\r\n            // console.log(data);\r\n            getMgmtQuestions();\r\n        }).catch(error => {\r\n            // console.log(error)\r\n            alert(\"Error: \", error);\r\n        })\r\n\r\n        clearAll();\r\n    }\r\n\r\n    const [getQuestions, setGetQuestions] = useState({});\r\n\r\n    function getMgmtQuestions() {\r\n        fetch(\"https://adgrecruitments.herokuapp.com/admin/management/get-all-questions\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"auth-token\": sessionStorage.getItem(\"admin\"),\r\n            },\r\n        })\r\n        .then((response) => {\r\n            return response.json();\r\n        })\r\n        .then((data) => {\r\n            setGetQuestions(data);\r\n            console.log(data);\r\n            console.log(getQuestions);\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n\r\n    async function deleteMgmtQuestion(id){\r\n        setMgmtQuestions((prevQ)=>{\r\n            return prevQ.filter((question,index)=>{\r\n                return question.id !==id;\r\n            })\r\n        })\r\n\r\n        await fetch(\"https://adgrecruitments.herokuapp.com/admin/management/delete-question/\" + id, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmMyNmI1NTNiNzgwMTE4N2IyZWE4ZTgiLCJpYXQiOjE2MDY3NjAwMTl9.DB2DxgaWierOYKZ4EJX44R9NXrEE5JwT0c2PaHSJAk4\",\r\n            }\r\n        })\r\n        .then((response) => {\r\n            return response.json();\r\n        })\r\n        .then((data) => {\r\n            // console.log(data);\r\n        })\r\n        .catch(error => {\r\n            // console.log(error);\r\n            alert(\"Error: \", error);\r\n        })\r\n    }\r\n\r\n    function clearAll(){\r\n        setFiles({});\r\n        setQuestionDescription(\"\");\r\n    }\r\n    \r\n    const [showModal,setShowModal]=useState(false);\r\n    let showModal1 = () => { setShowModal(true) }\r\n    let hideModal = () => { setShowModal(false) }\r\n    \r\n    let showQuestions=props.selectedValue===\"management\" ? \"management\": \"display-none\";\r\n    return(\r\n        <div></div>\r\n        // <div className={showQuestions}>\r\n        //     <div className={classes.top}>\r\n        //     <h2>Questionare:</h2>\r\n        //     <button type=\"button\" className={classes.addBtn} onClick={showModal1}>Add Question</button>\r\n        //     </div>\r\n        //     <Modal show={showModal} onHide={hideModal} questionDescription={questionDescription} selected={props.selectedValue} \r\n        //     setQuestionDescription={inputValue} inputYear={yearValue} \r\n        //     addQuestion={addMgmtQuestion} getFile={getFile}/>\r\n        //         {mgmtQuestions.map((question,index)=>(\r\n        //             <div className={classes.questions} key={index}>\r\n        //                 <div className={classes.descrip}>\r\n        //                     <div>{index+1}.</div>\r\n        //                     <div className={classes.questionDescrip1}>{question.questionDescription}</div>\r\n        //                             <div className={question.file ? \"display-image\" :\"display-none\"}><br />\r\n        //                                 <img src={question.file} alt=\"Q.img\" className={classes.image}></img>\r\n        //                             </div>\r\n        //                 </div>\r\n        //                 <button onClick={()=>deleteMgmtQuestion(question.id)}>Delete</button>\r\n        //             </div>\r\n        //         ))}\r\n\r\n        //         {getQuestions.map((question,index)=>(\r\n        //             <div className={classes.questions} key={index}>\r\n        //                 <div className={classes.descrip}>\r\n        //                     <div>{index+1}.</div>\r\n        //                     <div className={classes.questionDescrip}>{question.questionDescription}</div>\r\n        //                     {/* <div className={question.file ? \"display-image\" :\"display-none\"}><br />\r\n        //                         <img src={question.file} alt=\"Q.img\" className={classes.image}></img>\r\n        //                     </div> */}\r\n\r\n        //                 </div>\r\n        //                 <button onClick={()=>deleteMgmtQuestion(question.id)}>Delete</button>\r\n        //             </div>\r\n        //         ))}\r\n        // </div>\r\n    );\r\n}\r\nexport default MgmtQuestions;\r\n","D:\\Admin-portal\\ADG-Recruitment-Admin\\src\\components\\AdminQuestions\\Questions\\DesignQuestions.jsx",["124","125"],"import React,{ useState } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport Modal from '../Modal/Modal';\r\nimport classes from \"./Questions.module.css\";\r\n\r\nlet questionid;\r\nlet index=0;\r\nlet optionNo=0;\r\nconst DesignQuestions = (props)=>{\r\n        const [questionDescription,setQuestionDescription]=useState(\"\");\r\n        let inputValue = (event)=>{ setQuestionDescription(event.target.value) }\r\n\r\n        const [yearofstudy,setYearofstudy]=useState(1);\r\n        let yearValue = (event) =>{ setYearofstudy(event.target.value) }\r\n\r\n        const [files, setFiles] = useState({});\r\n        let getFile = (file)=>{ setFiles(file) }\r\n\r\n        const [inputOption,setInputOption]=useState(\"\");\r\n        let optionValue = (event)=>{ setInputOption(event.target.value) }\r\n\r\n        const [options,setOptions]=useState({});\r\n\r\n        const optionsArray = [\"a\", \"b\", \"c\", \"d\"];\r\n\r\n        function addOption(questionDescription){\r\n            if(questionDescription!==\"\"){\r\n                optionNo++;\r\n                if(optionNo<=4){\r\n                setOptions((prevOptions)=>{\r\n                    setInputOption(\"\");\r\n                    return {...prevOptions,[optionsArray[index-1]]:questionDescription}});\r\n                // console.log(options);\r\n                index++;\r\n                } else \r\n                {\r\n                    alert(\"Only 4 options per question!\")\r\n                    setInputOption(\"\");\r\n                };\r\n            }\r\n        }\r\n        const[correctOption,setCorrectOption]=useState(\"\")\r\n        let getCorrectOption = (event)=>{ setCorrectOption(event.target.value); }\r\n\r\n        let generateId = ()=>{ questionid = uuid() }\r\n\r\n        const [designQuestions,setDesignQuestions]=useState([\r\n        // {\r\n        //     id:uuid(),\r\n        //     questionDescription: \"Which of the following function of Array object adds one or more elements to the end of an array and returns the new length of the array?\",\r\n        //     options : {\r\n        //        1:\"pop()\",\r\n        //        2:\"push()\",\r\n        //        3:\"map()\",\r\n        //        4:\"join()\"\r\n        //     },\r\n        //     correctOption :\"c\",\r\n        //     yearofstudy:1,\r\n        //     file:{}\r\n        //    }\r\n        ]);\r\n        async function addDesignQuestion(){\r\n            setDesignQuestions((prevQ)=>{\r\n                return [...prevQ,{id:questionid,questionDescription:questionDescription,yearofstudy:yearofstudy,options:options,file:files.base64,correctOption:correctOption}]\r\n            })\r\n            \r\n            const questionObject = {questionDescription:questionDescription, options:options, correctOption:correctOption, yearofstudy:yearofstudy, questionImage:files.base64};\r\n            \r\n            await fetch(\"https://adgrecruitments.herokuapp.com/admin/design/add-question\", {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmMyNmI1NTNiNzgwMTE4N2IyZWE4ZTgiLCJpYXQiOjE2MDY3NjAwMTl9.DB2DxgaWierOYKZ4EJX44R9NXrEE5JwT0c2PaHSJAk4\",\r\n                },\r\n                body: JSON.stringify(questionObject)\r\n            })\r\n            .then(function (response) {\r\n                // console.log(questionObject);\r\n                // console.log(response);\r\n                return response.json();\r\n                // if(response.status === 200)\r\n                //     return response.json();\r\n                // else\r\n                //     throw Error(response.statusText);\r\n            }).then(data => {\r\n                // console.log(data);\r\n                getDesignQuestions();\r\n            }).catch(error => {\r\n                // console.log(error);\r\n                alert(\"Error: \", error);\r\n            })\r\n\r\n            // console.log(\"Design: \",designQuestions);\r\n            clearAll();\r\n        }\r\n\r\n        const [getQuestions, setGetQuestions] = useState([]);\r\n\r\n        function getDesignQuestions() {\r\n            fetch(\"https://adgrecruitments.herokuapp.com/admin/design/get-all-questions\", {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"auth-token\": sessionStorage.getItem(\"admin\"),\r\n                },\r\n            })\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                setGetQuestions(data);\r\n                console.log(data);\r\n                console.log(getQuestions);\r\n            })\r\n            .catch(error => console.log(error));\r\n        }\r\n\r\n        async function deleteDesignQuestion(id){\r\n            setDesignQuestions((prevQ)=>{\r\n                return prevQ.filter((question,index)=>{\r\n                    return question.id !==id;\r\n                })\r\n            })\r\n\r\n            await fetch(\"https://adgrecruitments.herokuapp.com/admin/design/delete-question/\" + id, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmMyNmI1NTNiNzgwMTE4N2IyZWE4ZTgiLCJpYXQiOjE2MDY3NjAwMTl9.DB2DxgaWierOYKZ4EJX44R9NXrEE5JwT0c2PaHSJAk4\",\r\n                }\r\n            })\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                // console.log(data);\r\n            })\r\n            .catch(error => {\r\n                // console.log(error);\r\n                alert(\"Error: \", error);\r\n            })\r\n        }\r\n\r\n        let clearAll = () => {\r\n            setCorrectOption(\"\");\r\n            setQuestionDescription(\"\");\r\n            setOptions({});\r\n            setFiles({});\r\n            index=0;\r\n            optionNo=0;\r\n        }\r\n\r\n    const [showModal,setShowModal]=useState(false);\r\n    let showModal1 = () => { setShowModal(true) }\r\n    let hideModal = () => { setShowModal(false) }\r\n\r\n    let multipleFunctions = () =>{ showModal1(); generateId(); }\r\n\r\n    let showQuestions=props.selectedValue===\"design\" ? \"design\": \"display-none\";\r\n    return(\r\n        <div className={showQuestions}>\r\n            <div className={classes.top}>\r\n            <h2>Questionare:</h2>\r\n            <button type=\"button\" className={classes.addBtn} onClick={multipleFunctions}>Add Question</button>\r\n            </div>\r\n            <Modal show={showModal} onHide={hideModal} genId={generateId} selected={props.selectedValue} \r\n            setQuestionDescription={inputValue} inputYear={yearValue} questionDescription={questionDescription} optionText={inputOption}\r\n            addQuestion={addDesignQuestion} id={questionid} \r\n            addOption={addOption} inputOption={optionValue} inputOptionVal={inputOption} options={options} correctOption={correctOption} getCorrectOption={getCorrectOption}\r\n            getFile={getFile} onClear={clearAll}\r\n            />\r\n                {/* {designQuestions.map((question,index)=>(\r\n                    <div className={classes.questions} key={index}>\r\n                        <div>\r\n                            <div className={classes.options}>\r\n                                <div>{index+1}.</div>\r\n                                <div className={classes.questionDescrip}>{question.questionDescription}</div>\r\n                                <div className={question.file ? \"display-image\" :\"display-none\"}>\r\n                                <img src={question.file} alt=\"Q.img\" className={classes.image}></img>\r\n                                </div>\r\n                            </div>\r\n                            <OptionsDisplay questions={question.options}/>\r\n                        </div>\r\n                        <button onClick={()=>deleteDesignQuestion(question.id)}>Delete</button>\r\n                    </div>\r\n                ))} */}\r\n\r\n                {/* {getQuestions.map((question,index)=>(\r\n                    <div className={classes.questions} key={index}>\r\n                        <div>\r\n                            <div className={classes.options}>\r\n                                <div>{index+1}.</div>\r\n                                <div className={classes.questionDescrip}>{question.questionDescription}</div>\r\n                                <div className={question.file ? \"display-image\" :\"display-none\"}>\r\n                                <img src={question.file} alt=\"Q.img\" className={classes.image}></img>\r\n                                </div>\r\n                            </div>\r\n                            <OptionsDisplay questions={question.options}/>\r\n                        </div>\r\n                        <button onClick={()=>deleteDesignQuestion(question.id)}>Delete</button>\r\n                    </div>\r\n                ))} */}\r\n        </div>\r\n    );\r\n}\r\nexport default DesignQuestions;\r\n\r\nexport const OptionsDisplay = (props)=>{\r\n    const questions=props.questions;\r\n    if(props.questions){\r\n    return(\r\n        <div>\r\n            {Object.keys(questions).map((index)=>(\r\n                <div className={classes.optionsContainer} key={index}>\r\n                    <div className={classes.index}>{index}.</div>\r\n                    <div key={index}>{questions[index]}</div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )} else {\r\n        return null\r\n    }\r\n}\r\n","D:\\Admin-portal\\ADG-Recruitment-Admin\\src\\components\\AdminQuestions\\Questions\\TechnicalQuestions.jsx",["126","127","128"],"import React,{ useState } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport Modal from '../Modal/Modal';\r\nimport classes from \"./Questions.module.css\";\r\n\r\nlet questionid;\r\nlet index=0;\r\nlet optionNo=0;\r\nlet getQuestions=[];\r\nconst TechQuestions = (props)=>{\r\n    const [questionDescription, setQuestionDescription]=useState(\"\");\r\n    let inputValue = (event)=>{ setQuestionDescription(event.target.value) }\r\n\r\n    const [yearofstudy,setYearofstudy]=useState(1);\r\n    let yearValue = (event) =>{ setYearofstudy(event.target.value) }\r\n\r\n    const [files, setFiles] = useState({});\r\n    let getFile = (file)=>{ setFiles(file) }\r\n\r\n    const [inputOption,setInputOption]=useState(\"\");\r\n    let optionValue = (event)=>{ setInputOption(event.target.value) }\r\n\r\n    const [options,setOptions]=useState({});\r\n\r\n    const optionsArray = [\"a\", \"b\", \"c\", \"d\"];\r\n\r\n    function addOption(questionDescription){\r\n        if(questionDescription!==\"\"){\r\n            optionNo++;\r\n            if(optionNo<=4){\r\n            setOptions((prevOptions)=>{\r\n                setInputOption(\"\");\r\n                return {...prevOptions,[optionsArray[index-1]]:questionDescription}});\r\n            // console.log(options);\r\n            index++;\r\n            } else \r\n            {\r\n                alert(\"Only 4 options per question!\")\r\n                setInputOption(\"\");\r\n            };\r\n        }\r\n    }\r\n    const[correctOption,setCorrectOption]=useState(\"\")\r\n    let getCorrectOption = (event)=>{ setCorrectOption(event.target.value) }\r\n\r\n    let generateId = () => { questionid = uuid() }\r\n\r\n        const [techQuestions,setTechQuestions]=useState([\r\n        // {\r\n        //     id:uuid(),\r\n        //     questionDescription: \"Which of the following function of Array object adds one or more elements to the end of an array and returns the new length of the array?\",\r\n        //     options : {\r\n        //        1:\"pop()\",\r\n        //        2:\"push()\",\r\n        //        3:\"map()\",\r\n        //        4:\"join()\"\r\n        //     },\r\n        //     correctOption :\"c\",\r\n        //     yearofstudy:1,\r\n        //     file:{}\r\n        //    }\r\n        ]);\r\n\r\n        async function addTechQuestion(){\r\n            setTechQuestions((prevQ)=>{\r\n                return [...prevQ,{id:questionid,questionDescription:questionDescription,yearofstudy:yearofstudy,options:options,file:files.base64,correctOption:correctOption}]\r\n            })\r\n            // console.log(techQuestions);\r\n            const questionObject = {questionDescription:questionDescription, options:options, correctOption:correctOption, yearofstudy:yearofstudy, questionImage:files.base64};\r\n\r\n            console.log(sessionStorage.getItem(\"admin\"));\r\n\r\n            await fetch(\"https://adgrecruitments.herokuapp.com/admin/technical/add-question\", {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmMyNmI1NTNiNzgwMTE4N2IyZWE4ZTgiLCJpYXQiOjE2MDY3NjAwMTl9.DB2DxgaWierOYKZ4EJX44R9NXrEE5JwT0c2PaHSJAk4\",\r\n                },\r\n                body: JSON.stringify(questionObject)\r\n            })\r\n            .then(function (response) {\r\n                // console.log(questionObject);\r\n                // console.log(response);\r\n                return response.json();\r\n                // if(response.status === 200)\r\n                //     return response.json();\r\n                // else\r\n                //     throw Error(response.statusText);\r\n            }).then(data => {\r\n                // console.log(data);\r\n                getTechQuestions();\r\n            }).catch(error => {\r\n                // console.log(error);\r\n                alert(\"Error: \", error);\r\n            })\r\n            // console.log(techQuestions);\r\n            clearAll();\r\n        }\r\n\r\n\r\n        function getTechQuestions() {\r\n            fetch(\"https://adgrecruitments.herokuapp.com/admin/technical/get-all-questions\", {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmMyNmI1NTNiNzgwMTE4N2IyZWE4ZTgiLCJpYXQiOjE2MDY3NjAwMTl9.DB2DxgaWierOYKZ4EJX44R9NXrEE5JwT0c2PaHSJAk4\",\r\n                },\r\n            })\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                getQuestions=data.questions;\r\n                getQuestions.map(question=>{\r\n                    console.log(\"description\",question['questionDescription']);\r\n                    console.log(\"options\",question['options']);\r\n                    console.log(\"file\",question['file']);\r\n                })\r\n            })\r\n            .catch(error => console.log(error));\r\n        }\r\n\r\n        // window.addEventListener('onload',getTechQuestions);\r\n\r\n        async function deleteTechQuestion(id){\r\n            setTechQuestions((prevQ)=>{\r\n                return prevQ.filter((question,index)=>{\r\n                    return question.id !==id;\r\n                })\r\n            })\r\n\r\n            await fetch(\"https://adgrecruitments.herokuapp.com/admin/technical/delete-question/\" + id, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmMyNmI1NTNiNzgwMTE4N2IyZWE4ZTgiLCJpYXQiOjE2MDY3NjAwMTl9.DB2DxgaWierOYKZ4EJX44R9NXrEE5JwT0c2PaHSJAk4\",\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(response);\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                // console.log(data);\r\n                alert(\"Question deleted successfully!\");\r\n            })\r\n            .catch(error => {\r\n                // console.log(error);\r\n                alert(\"Error: \", error);\r\n            })\r\n\r\n            getTechQuestions();\r\n        }\r\n\r\n        let clearAll = () => {\r\n            setCorrectOption(\"\");\r\n            setQuestionDescription(\"\");\r\n            setOptions({});\r\n            setFiles({});\r\n            index=0;\r\n            optionNo=0;\r\n        }\r\n\r\n   const [showModal,setShowModal]=useState(false);\r\n    let showModal1 = () => { setShowModal(true) }\r\n    let hideModal = () => { setShowModal(false) }\r\n\r\n    let multipleFunctions = () =>{ showModal1(); generateId(); }\r\n\r\n    let showQuestions=props.selectedValue===\"technical\" ? \"technical\": \"display-none\";\r\n    return(\r\n        <div className={showQuestions}>\r\n            <div className={classes.top}>\r\n            <h2>Questionare:</h2>\r\n            <button type=\"button\" className={classes.addBtn} onClick={multipleFunctions}>Add Question</button>\r\n            </div>\r\n            <Modal show={showModal} onHide={hideModal} genId={generateId} selected={props.selectedValue} \r\n            setQuestionDescription={inputValue} inputYear={yearValue} questionDescription={questionDescription} optionText={inputOption}\r\n            addQuestion={addTechQuestion} id={questionid} \r\n            addOption={addOption} inputOption={optionValue} inputOptionVal={inputOption} options={options} \r\n            correctOption={correctOption} getCorrectOption={getCorrectOption}\r\n            getFile={getFile} onClear={clearAll}\r\n            />\r\n                {/* {techQuestions.map((question,index)=>(\r\n                    <div className={classes.questions} key={index}>\r\n                        <div>\r\n                            <div className={classes.options}>\r\n                                <div>{index+1}.</div>\r\n                                <div className={classes.questionDescrip}>{question.questionDescription}</div>\r\n                                <div className={question.file ? \"display-image\" :\"display-none\"}>\r\n                                <img src={question.file} alt=\"Q.img\" className={classes.image}></img>\r\n                                </div>\r\n                            </div>\r\n                            <OptionsDisplay questions={question.options}/>\r\n                        </div>\r\n                        <button onClick={()=>deleteTechQuestion(question.id)}>Delete</button>\r\n                    </div>\r\n                ))} */}\r\n                {getQuestions.map((question,index)=>(\r\n                    <div className={classes.questions} key={index}>\r\n                        <div>\r\n                            <div className={classes.options}>\r\n                                <div>{index+1}.</div>\r\n                                <div className={classes.questionDescrip}>{question['questionDescription']}</div>\r\n                                <div className={question['file'] ? \"display-image\" :\"display-none\"}>\r\n                                <img src={question['file']} alt=\"Q.img\" className={classes.image}></img>\r\n                                </div>\r\n                            </div>\r\n                            <OptionsDisplay questions={question['options']}/>\r\n                        </div>\r\n                        {/* <button onClick={()=>deleteTechQuestion(question.id)}>Delete</button> */}\r\n                    </div>\r\n                ))}\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default TechQuestions;\r\n\r\nexport const OptionsDisplay = (props)=>{\r\n    const questions=props.questions;\r\n    if(props.questions){\r\n    return(\r\n        <div>\r\n            {Object.keys(questions).map((index)=>(\r\n                <div className={classes.optionsContainer} key={index}>\r\n                    <div className={classes.index}>{index}.</div>\r\n                    <div key={index}>{questions[index]}</div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )} else {\r\n        return null\r\n    }\r\n}\r\n","D:\\Admin-portal\\ADG-Recruitment-Admin\\src\\components\\AdminQuestions\\Modal\\Modal.jsx",["129"],"import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useRef } from \"react\" \r\nimport FileBase64 from 'react-file-base64';\r\nimport { OptionsDisplay } from \"../Questions/TechnicalQuestions\";\r\nimport \"./Modal.css\";\r\n\r\nconst Modal = (props) => {\r\n  function handleAddOptions(){\r\n    props.addOption(props.inputOptionVal,props.id);\r\n  }\r\n  function handleClick(){\r\n    if((props.questionDescription && props.correctOption && Object.keys(props.options).length===4) || props.selected === 'management'){\r\n    props.onHide();\r\n    props.addQuestion();\r\n    // alert(\"Question submitted successfully!\");\r\n  } else {\r\n    alert(\"Make sure there is a question description,4 options,a correct option input for submission\")\r\n  }\r\n}\r\n\r\n  let modalRef=useRef()\r\n  // useEffect(()=>{\r\n  //   document.addEventListener(\"mousedown\",(event)=>{\r\n  //     if(!modalRef.current.contains(event.target)){\r\n  //       props.onHide();\r\n  //       // props.onClear();\r\n  //     }\r\n  //   });\r\n  // });\r\n\r\n  const modalClass = props.show ? \"modal display-block\" : \"modal display-none\";\r\n  const showOptionsClass=props.selected==='management' ? \"hide-options\" : \"display-options\";\r\n  return (\r\n    <div className={modalClass}>\r\n      <div className=\"modal-main\" ref={modalRef}>\r\n        <div className=\"modal-header\">\r\n          <h4 className=\"heading\">Add Question</h4>\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <label htmlFor=\"stmt\" className=\"label\">Statement:</label>\r\n          <textarea id=\"stmt\" value={props.questionDescription} onChange={props.setQuestionDescription} />\r\n        </div>\r\n        {/* <div className=\"type\">\r\n          <div>Type:</div>\r\n          <div className=\"radio\">\r\n            <input type=\"radio\" value=\"subjective\" name=\"qtype\" id=\"subjective\"></input>\r\n            <label htmlFor=\"subjective\">Subjective</label>\r\n          </div>\r\n          <div className=\"radio\">\r\n            <input type=\"radio\" value=\"objective\" name=\"qtype\" id=\"objective\" ></input>\r\n            <label htmlFor=\"objective\">Objective</label>\r\n          </div>\r\n        </div> */}\r\n        <div className=\"drop-down\" onChange={props.inputYear}>\r\n          <label htmlFor=\"yearofstudy\">Choose year:</label>\r\n              <select name=\"yearofstudy\" id=\"yearofstudy\">\r\n                <option value=\"1\">1</option>\r\n                <option value=\"\">2</option>\r\n              </select>\r\n        </div>\r\n        <div className=\"image-container\">\r\n          <div>Image:</div>\r\n          <FileBase64 multiple={false} onDone={x=>props.getFile(x)} />\r\n        </div>\r\n        <div className={showOptionsClass}>\r\n            <div className=\"option\">Options :</div>\r\n            <OptionsDisplay questions={props.options} />\r\n            <div>\r\n            <button onClick={handleAddOptions} className=\"btn-addopt\">+ Add</button>\r\n            <input placeholder=\"Add Option\" value={props.optionText} onChange={props.inputOption} className=\"input-option\"></input>\r\n            <input placeholder=\"Enter index of the correct option\" value={props.correctOption} className=\"input-correct\" onChange={props.getCorrectOption}/>\r\n            </div>\r\n        </div>\r\n        <button onClick={handleClick} className=\"submit-btn\">Post Question</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Modal;\r\n","D:\\Admin-portal\\ADG-Recruitment-Admin\\src\\components\\Leaderboard\\Leaderboard.jsx",[],"D:\\Admin-portal\\ADG-Recruitment-Admin\\src\\components\\Leaderboard\\Display.jsx",["130"],"D:\\Admin-portal\\ADG-Recruitment-Admin\\src\\components\\UserCard\\UserCard.jsx",[],"D:\\Admin-portal\\ADG-Recruitment-Admin\\src\\components\\Leaderboard\\Detail.jsx",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":48,"column":16,"nodeType":"137","messageId":"138","endLine":48,"endColumn":29},{"ruleId":"139","severity":1,"message":"140","line":114,"column":42,"nodeType":"141","messageId":"142","endLine":114,"endColumn":44},{"ruleId":"135","severity":1,"message":"143","line":125,"column":24,"nodeType":"137","messageId":"138","endLine":125,"endColumn":42},{"ruleId":"131","replacedBy":"144"},{"ruleId":"133","replacedBy":"145"},{"ruleId":"135","severity":1,"message":"146","line":3,"column":8,"nodeType":"137","messageId":"138","endLine":3,"endColumn":13},{"ruleId":"135","severity":1,"message":"147","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":15},{"ruleId":"135","severity":1,"message":"148","line":8,"column":9,"nodeType":"137","messageId":"138","endLine":8,"endColumn":19},{"ruleId":"135","severity":1,"message":"149","line":11,"column":9,"nodeType":"137","messageId":"138","endLine":11,"endColumn":18},{"ruleId":"135","severity":1,"message":"150","line":14,"column":13,"nodeType":"137","messageId":"138","endLine":14,"endColumn":20},{"ruleId":"135","severity":1,"message":"151","line":16,"column":12,"nodeType":"137","messageId":"138","endLine":16,"endColumn":25},{"ruleId":"135","severity":1,"message":"152","line":24,"column":20,"nodeType":"137","messageId":"138","endLine":24,"endColumn":35},{"ruleId":"135","severity":1,"message":"153","line":75,"column":20,"nodeType":"137","messageId":"138","endLine":75,"endColumn":38},{"ruleId":"135","severity":1,"message":"154","line":106,"column":12,"nodeType":"137","messageId":"138","endLine":106,"endColumn":21},{"ruleId":"135","severity":1,"message":"155","line":107,"column":9,"nodeType":"137","messageId":"138","endLine":107,"endColumn":19},{"ruleId":"135","severity":1,"message":"156","line":108,"column":9,"nodeType":"137","messageId":"138","endLine":108,"endColumn":18},{"ruleId":"135","severity":1,"message":"157","line":110,"column":9,"nodeType":"137","messageId":"138","endLine":110,"endColumn":22},{"ruleId":"135","severity":1,"message":"158","line":47,"column":16,"nodeType":"137","messageId":"138","endLine":47,"endColumn":31},{"ruleId":"135","severity":1,"message":"159","line":118,"column":24,"nodeType":"137","messageId":"138","endLine":118,"endColumn":44},{"ruleId":"135","severity":1,"message":"136","line":48,"column":16,"nodeType":"137","messageId":"138","endLine":48,"endColumn":29},{"ruleId":"139","severity":1,"message":"140","line":114,"column":42,"nodeType":"141","messageId":"142","endLine":114,"endColumn":44},{"ruleId":"135","severity":1,"message":"143","line":125,"column":24,"nodeType":"137","messageId":"138","endLine":125,"endColumn":42},{"ruleId":"135","severity":1,"message":"160","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":19},{"ruleId":"139","severity":1,"message":"140","line":26,"column":39,"nodeType":"141","messageId":"142","endLine":26,"endColumn":41},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'techQuestions' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'deleteTechQuestion' is defined but never used.",["161"],["162"],"'Modal' is defined but never used.","'classes' is defined but never used.","'inputValue' is assigned a value but never used.","'yearValue' is assigned a value but never used.","'getFile' is assigned a value but never used.","'mgmtQuestions' is assigned a value but never used.","'addMgmtQuestion' is defined but never used.","'deleteMgmtQuestion' is defined but never used.","'showModal' is assigned a value but never used.","'showModal1' is assigned a value but never used.","'hideModal' is assigned a value but never used.","'showQuestions' is assigned a value but never used.","'designQuestions' is assigned a value but never used.","'deleteDesignQuestion' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]